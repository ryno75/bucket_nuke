#!/usr/bin/env python
'''
nuke_buckets
Deletes all objects, object_versions, and bucket for a list of S3 buckets

Ryan Kennedy (ryno75@gmail.com), 2016-07-12
'''
import argparse
import os
import sys
from bucket_nuke import nuke_buckets, version

py3 = True if sys.version_info[0] > 2 else False

# defaults
progname = os.path.basename(sys.argv[0])


def parse_args():
    '''
    Parse arguments passed to script
    '''
    if '-v' in sys.argv:
        print('{0} version: {1}'.format(progname, version))
        sys.exit()

    arg_parser = argparse.ArgumentParser(
        description='Deletes all objects, object_versions, and bucket '
                    'for a list of S3 buckets')
    arg_parser.add_argument(
        'buckets',
        type=str,
        nargs='+',
        metavar='BUCKET',
        help='AWS S3 Bucket name')
    arg_parser.add_argument(
        '-p',
        '--profile',
        type=str,
        required=False,
        metavar='AWS_PROFILE',
        help='AWS profile stored in ~/.aws/credendtials file')
    arg_parser.add_argument(
        '-r',
        '--region',
        type=str,
        required=False,
        default='us-east-1',
        metavar='S3_REGION',
        help='AWS S3 Region')
    arg_parser.add_argument(
        '--debug',
        action='store_true',
        help='Enable verbose debugging output')

    return arg_parser.parse_args()


def main():
    args = parse_args()
    buckets = args.buckets
    region = args.region
    profile = args.profile
    debug = args.debug

    print('\nSet to delete the following S3 buckets and all objects/versions:')
    print('  ' + '\n  {}'.join(buckets) + '\n')
    print('!! WARNING: This operation is VERY destructive and cannot be '
          'undone !!')
    q = 'Are you ABSOLUTELY CERTAIN you wish to proceed? [YES/no]: '
    a = None
    while a not in ('YES', 'no', 'No', 'NO', 'n', 'N'):
        if py3:
            a = input(q)
        else:
            a = raw_input(q)
    if a == 'YES':
        print('Nuking S3 buckets: {}'.format(', '.join(buckets)) + '\n')
        results = nuke_buckets(buckets,
                               region=region,
                               profile=profile,
                               debug=debug)

        if results:
            for b in results:
                print('Deleted S3 bucket: {}'.format(b.name))
                if debug:
                    print('  deleted {} objects:'.format(len(b.objects)))
                    print('    ' + '\n    '.join(b.objects))
                    print('  deleted {} object versions:'.format(
                          len(b.object_versions)))
                    print('    ' + '\n    '.join(b.object_versions))
                print
        else:
            print('None of the buckets specified were found using your AWS '
                  'credentials. No action performed.')
    else:
        print('\nNuke aborted on user input.')
        sys.exit(1)


if __name__ == '__main__':
    main()
